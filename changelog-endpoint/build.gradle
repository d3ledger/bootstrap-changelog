buildscript {
    ext.ktor_version = '1.0.0'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'
    }
}

plugins {
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.21"
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
shadowDistZip.classifier = 'shadow'
shadowDistTar.classifier = 'shadow'

mainClassName = "jp.co.soramitsu.bootstrap.changelog.ChangelogAppMain"

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile project(":changelog-interface")
    implementation 'com.github.d3ledger.notary:notary-commons:3041ba9757'
    // Spring
    compile group: 'org.springframework', name: 'spring-context', version: '5.1.4.RELEASE'
    // Logging
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile 'io.github.microutils:kotlin-logging:1.4.9'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.8.0-beta2'
    // Json
    compile group: 'org.json', name: 'json', version: '20180813'
    // Groovy
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.0-alpha-4'
    // Result
    compile group: 'com.github.kittinunf.result', name: 'result', version: '1.4.0'
    // Ktor
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile group: 'io.ktor', name: 'ktor-server-test-host', version: '1.0.0-beta-4'
    compile "io.ktor:ktor-gson:$ktor_version"
    // Swagger
    compile 'de.nielsfalk.ktor:ktor-swagger:0.5.0'
    // Configuration
    compile group: 'com.jdiazcano.cfg4k', name: 'cfg4k-core', version: '0.9.3'
    //Iroha-java related
    testCompile('com.github.hyperledger.iroha-java:testcontainers:4.0.0')
    testCompile('org.slf4j:slf4j-api:1.7.25')
    testCompile('org.slf4j:slf4j-simple:1.7.25')
}

task run–°hangelog(type: JavaExec) {
    main = 'jp.co.soramitsu.bootstrap.changelog.ChangelogAppMain'
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs += 'src/integration-test/kotlin'
        }
        resources {
            srcDirs = ["src/integration-test/resources"]
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Run changelog integration tests'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    setWorkingDir("$rootDir/")
    // Enable JUnit5 tests
    useJUnitPlatform {
    }

    mustRunAfter test
}
check.dependsOn integrationTest


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
